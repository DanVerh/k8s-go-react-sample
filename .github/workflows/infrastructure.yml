name: Infrastructure Setup

on:
  workflow_dispatch:
    

jobs:

# DEPLOY TO STAGE

  infraSetup:
  
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: prod
    
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      
      #- name: Create Container for PV
      #  run: |
      #    az storage account create --name ${{ github.repository_id }} --resource-group ${{ vars.RESOURCE_GROUP }} --sku Standard_LRS
      #    az storage container create --name db-pv --connection-string "$(az storage account show-connection-string --name ${{ github.repository_id }} --resource-group ${{ vars.RESOURCE_GROUP }} --query "connectionString" --output tsv)"
#          connectionString=$(az storage account show-connection-string --name ${{ github.repository_id }} --resource-group ${{ vars.RESOURCE_GROUP }} --query "connectionString" --output tsv)

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ vars.RESOURCE_GROUP }}
          cluster-name: ${{ vars.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      #- name: Create namespaces
      #  run: |
      #    kubectl create namespace prod
      #    kubectl create namespace stage

      # Runs Helm to create manifest files
      - name: Bake deployment
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: helm/infrastructure
          helm-version: "latest"
          overrides: |
            resourceGroup:${{ vars.RESOURCE_GROUP }}
            storageAccount:${{ github.repository_id }}
        id: bake

      # Deploys application based on manifest files from previous step
      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          namespace: prod
          manifests: ${{ steps.bake.outputs.manifestsBundle }}

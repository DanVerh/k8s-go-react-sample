name: Frontend CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend-ci-cd.yml"
      - "helm/frontend/**"
  pull_request:
    branches: [ "main" ]
    

jobs:

# BUILD

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Build
      working-directory: ./frontend
      run: docker image build --tag danverh/react-sample:${{ github.sha }} .
    
    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker Push
      working-directory: ./frontend
      run: docker image push danverh/react-sample:${{ github.sha }}


# DEPLOY TO STAGE

  deployToStage:
  
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: stage
    needs: build
    
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ vars.RESOURCE_GROUP }}
          cluster-name: ${{ vars.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Runs Helm to create manifest files
      - name: Bake deployment
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: helm/frontend
          helm-version: "latest"
          overrides: |
            containers:
              imageVersion: ${{ github.sha }}
        id: bake

      # Deploys application based on manifest files from previous step
      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          namespace: stage
          manifests: ${{ steps.bake.outputs.manifestsBundle }}


# DEPLOY TO PROD

  deployToProd:
    
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: prod
    needs: [build, deployToStage]
    
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3
  
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{   secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.  AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
  
      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'
  
      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ vars.RESOURCE_GROUP }}
          cluster-name: ${{ vars.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'
  
      # Runs Helm to create manifest files
      - name: Bake deployment
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: helm/frontend
          overrideFiles: helm/frontend/prod-values.yaml
          overrides: |
            containers:
              imageVersion: ${{ github.sha }}
          helm-version: "latest"
        id: bake
  
      # Deploys application based on manifest files from previous step
      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          namespace: prod
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          #images: |
            #${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.  CONTAINER_NAME }}:${{ github.sha }}
  